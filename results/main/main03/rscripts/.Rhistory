ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
ggsave("graphs/figures-for-SuB29-paper/H1.pdf",height=2.7,width=2.3)
# select relevant utterances and QUDs: negated know and think, QUD BEL?
h2 = d %>%
filter(predicate == "know" | predicate == "think") %>%
filter(valence == "neg") %>%
filter(qud == "nai")
# calculate mean inference in exp1 to order utterances
means.utt = d %>%
group_by(utterance) %>%
summarize(Mean = mean(response))
means.utt
# exp1
means_exp1 = h2 %>%
group_by(utterance,prior) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
select(-c(CILow, CIHigh))
means_exp1
means_exp1$utterance = as.factor(as.character(means_exp1$utterance))
# relevel the utterances
means_exp1$utterance = factor(means_exp1$utterance, levels = means.utt$utterance[order(means.utt$Mean)], ordered = TRUE)
levels(means_exp1$utterance)
# relevel prior in the relevant two datasets
means_exp1$prior <- factor(means_exp1$prior, levels = c("lower","higher"))
# plot
ggplot(means_exp1, aes(x=utterance, y=Mean)) +
#geom_point(data=PL_agg.utt.prior, aes(x=utterance, y=prob, shape=prior), color = "red", fill="red", size = 3) +
geom_point(aes(shape=prior), size = 3, color="black",fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="none") +
scale_shape_manual(values=c(25,24)) +
#guides(shape=guide_legend("prior probability \n of target content"), nrow=2) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("simple-pos"="c", "simple-neg"="not c", "know-pos" = "Cole knows \n that c", "know-neg" = "Cole doesn't \n know that c",
"think-pos" = "Cole thinks \n that c", "think-neg" = "Cole doesn't \n think that c")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
ggsave("graphs/figures-for-SuB29-paper/H2.pdf",height=2.7,width=2.3)
# select relevant utterances and QUDs: negated know and think, QUD BEL?
h3 = d %>%
filter(predicate == "know" | predicate == "think") %>%
filter(valence == "neg")
# calculate mean inference in exp1 to order utterances
means.utt = d %>%
group_by(utterance) %>%
summarize(Mean = mean(response))
means.utt
# calculate mean inference ratings in exp2 by QUD
means_exp1 = h3 %>%
group_by(qud) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
select(-c(CILow, CIHigh))
means_exp1
# relevel QUDs
means_exp1$qud <- factor(means_exp1$qud, levels = c("nai","ai"), labels = c("BEL?", "C?"))
# plot
ggplot(means_exp1, aes(x=qud, y=Mean)) +
#geom_point(data=PL_agg.utt.qud, shape=21, aes(x=qud, y=prob), size = 3, color = "red", fill = "red") +
geom_point(size = 3, color="black",fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="none") +
#scale_fill_manual(values=c("#E69F00","#56B4E9")) +
#guides(fill=guide_legend("QUD")) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,.2,.4,.6,.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("BEL?"="BEL?", "CC?"="C?")) +
#scale_x_discrete(labels=c("BEL?"="Does Cole \n believe C?", "C?"="Does Charley \n speak Spanish?")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
ggsave("graphs/figures-for-SuB29-paper/H3.pdf",height=2.7,width=2.3)
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
this.dir
# load required packages
library(tidyverse)
library(ggrepel)
library(dichromat)
library(forcats)
library(ggrepel)
# color-blind-friendly palette
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
theme_set(theme_bw())
# load helper functions
source('../../../helpers.R')
# load cleaned data
d = read_csv("../data/cd.csv")
nrow(d) #873
names(d)
# select relevant utterances and QUDs: negated know and think, QUD BEL?
h1 = d %>%
filter(predicate == "know" | predicate == "think") %>%
filter(valence == "neg") %>%
filter(qud == "nai")
table(h1$utterance)
table(h1$qud)
# calculate mean inference in exp1 to order utterances
means.utt = d %>%
group_by(utterance) %>%
summarize(Mean = mean(response))
means.utt
# exp1
means_exp1 = h1 %>%
group_by(utterance) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
select(-c(CILow, CIHigh))
means_exp1
# relevel the utterances
means_exp1$utterance = factor(means_exp1$utterance, levels = means.utt$utterance[order(means.utt$Mean)], ordered = TRUE)
levels(means_exp1$utterance)
# plot projection (QUD BEL) for neg-know and neg-think (Exp 1)
ggplot(means_exp1, aes(x=utterance, y=Mean)) +
#geom_point(data=PL_agg.utt, shape=21, aes(x=utterance, y=prob), size = 3, color = "cornflowerblue", fill="cornflowerblue") +
#geom_point(data=means_exp2, aes(x=utterance, y=Mean), color="#E69F00", size = 3, position=position_nudge(x=.2)) +
#geom_errorbar(data=means_exp2, aes(ymin=YMin,ymax=YMax), width=.05,color="#E69F00",position=position_nudge(x=.2)) +
geom_point(shape=21, size = 3, color = "black", fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="top") +
guides(shape=guide_legend("prior probability of target content"),fill=guide_legend("QUD", override.aes=list(shape=21))) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("simple-pos"="c", "simple-neg"="not c", "know-pos" = "Cole knows \n that c", "know-neg" = "Cole doesn't \n know that c",
"think-pos" = "Cole thinks \n that c", "think-neg" = "Cole doesn't \n think that c")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
ggsave("../graphs/figures-for-SuB29-paper/H1.pdf",height=2.7,width=2.3)
# select relevant utterances and QUDs: negated know and think, QUD BEL?
h2 = d %>%
filter(predicate == "know" | predicate == "think") %>%
filter(valence == "neg") %>%
filter(qud == "nai")
# calculate mean inference in exp1 to order utterances
means.utt = d %>%
group_by(utterance) %>%
summarize(Mean = mean(response))
means.utt
# exp1
means_exp1 = h2 %>%
group_by(utterance,prior) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
select(-c(CILow, CIHigh))
means_exp1
means_exp1$utterance = as.factor(as.character(means_exp1$utterance))
# relevel the utterances
means_exp1$utterance = factor(means_exp1$utterance, levels = means.utt$utterance[order(means.utt$Mean)], ordered = TRUE)
levels(means_exp1$utterance)
# relevel prior in the relevant two datasets
means_exp1$prior <- factor(means_exp1$prior, levels = c("lower","higher"))
# plot
ggplot(means_exp1, aes(x=utterance, y=Mean)) +
#geom_point(data=PL_agg.utt.prior, aes(x=utterance, y=prob, shape=prior), color = "red", fill="red", size = 3) +
geom_point(aes(shape=prior), size = 3, color="black",fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="none") +
scale_shape_manual(values=c(25,24)) +
#guides(shape=guide_legend("prior probability \n of target content"), nrow=2) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("simple-pos"="c", "simple-neg"="not c", "know-pos" = "Cole knows \n that c", "know-neg" = "Cole doesn't \n know that c",
"think-pos" = "Cole thinks \n that c", "think-neg" = "Cole doesn't \n think that c")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
ggsave("graphs/figures-for-SuB29-paper/H2.pdf",height=2.7,width=2.3)
# plot
ggplot(means_exp1, aes(x=utterance, y=Mean)) +
#geom_point(data=PL_agg.utt.prior, aes(x=utterance, y=prob, shape=prior), color = "red", fill="red", size = 3) +
geom_point(aes(shape=prior), size = 3, color="black",fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="none") +
scale_shape_manual(values=c(25,24)) +
#guides(shape=guide_legend("prior probability \n of target content"), nrow=2) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("simple-pos"="c", "simple-neg"="not c", "know-pos" = "Cole knows \n that c", "know-neg" = "Cole doesn't \n know that c",
"think-pos" = "Cole thinks \n that c", "think-neg" = "Cole doesn't \n think that c")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
ggsave("../graphs/figures-for-SuB29-paper/H2.pdf",height=2.7,width=2.3)
# select relevant utterances and QUDs: negated know and think, QUD BEL?
h3 = d %>%
filter(predicate == "know" | predicate == "think") %>%
filter(valence == "neg")
# calculate mean inference in exp1 to order utterances
means.utt = d %>%
group_by(utterance) %>%
summarize(Mean = mean(response))
means.utt
# calculate mean inference ratings in exp2 by QUD
means_exp1 = h3 %>%
group_by(qud) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
select(-c(CILow, CIHigh))
means_exp1
# relevel QUDs
means_exp1$qud <- factor(means_exp1$qud, levels = c("nai","ai"), labels = c("BEL?", "C?"))
# plot
ggplot(means_exp1, aes(x=qud, y=Mean)) +
#geom_point(data=PL_agg.utt.qud, shape=21, aes(x=qud, y=prob), size = 3, color = "red", fill = "red") +
geom_point(size = 3, color="black",fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="none") +
#scale_fill_manual(values=c("#E69F00","#56B4E9")) +
#guides(fill=guide_legend("QUD")) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,.2,.4,.6,.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("BEL?"="BEL?", "CC?"="C?")) +
#scale_x_discrete(labels=c("BEL?"="Does Cole \n believe C?", "C?"="Does Charley \n speak Spanish?")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
# plot
ggplot(means_exp1, aes(x=qud, y=Mean)) +
#geom_point(data=PL_agg.utt.qud, shape=21, aes(x=qud, y=prob), size = 3, color = "red", fill = "red") +
geom_point(size = 3, color="black",fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="none") +
#scale_fill_manual(values=c("#E69F00","#56B4E9")) +
#guides(fill=guide_legend("QUD")) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,.2,.4,.6,.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("BEL?"="BEL?", "CC?"="C?")) +
#scale_x_discrete(labels=c("BEL?"="Does Cole \n believe C?", "C?"="Does Charley \n speak Spanish?")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
ggsave("../graphs/figures-for-SuB29-paper/H3.pdf",height=2.7,width=2.3)
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
# load required packages
library(tidyverse)
# load cleaned data
d = read_csv("../data/cd.csv")
nrow(d) #873
# analyses reported in SuB abstract ----
names(d)
table(d$utterance)
table(d$qud)
table(d$prior)
# set reference levels
d = d %>%
mutate(utterance = fct_relevel(utterance, "think-neg"),
qud = fct_relevel(qud, "ai"),
prior = fct_relevel(prior, "lower"))
# P1
m = lmer(response ~ utterance + (1|prior) + (1|content), data=d[d$utterance == "know-neg" | d$utterance == "think-neg",])
# load required packages
library(tidyverse)
library(dplyr)
library(emmeans)
library(lme4)
library(lmerTest)
# set reference levels
d = d %>%
mutate(utterance = fct_relevel(utterance, "think-neg"),
qud = fct_relevel(qud, "ai"),
prior = fct_relevel(prior, "lower"))
# P1
m = lmer(response ~ utterance + (1|prior) + (1|content), data=d[d$utterance == "know-neg" | d$utterance == "think-neg",])
summary(m)
# P2
m = lmer(response ~ prior + (1|utterance) + (1|content), data=d[d$utterance == "know-neg" | d$utterance == "think-neg",])
summary(m)
m = lmer(response ~ prior + (1|utterance) + (1|content), data=d[d$utterance == "know-neg",])
m = lmer(response ~ prior + (1|content), data=d[d$utterance == "know-neg",])
summary(m)
m = lmer(response ~ prior + (1|content), data=d[d$utterance == "think-neg",])
summary(m)
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
# load required packages
library(tidyverse)
library(ggrepel)
library(dichromat)
library(forcats)
library(ggrepel)
# color-blind-friendly palette
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
theme_set(theme_bw())
# load helper functions
source('../../../helpers.R')
# load cleaned data
d = read_csv("../data/cd.csv")
nrow(d) #327
names(d)
length(unique(d$participantID)) #327
# select relevant utterances and QUDs: negated know and think, QUD BEL?
h1 = d %>%
filter(predicate == "know" | predicate == "think") %>%
filter(valence == "neg") %>%
filter(qud == "nai")
table(h1$utterance)
table(h1$qud)
# calculate mean inference to order utterances
means.utt = d %>%
group_by(utterance) %>%
summarize(Mean = mean(response))
means.utt
# exp2
means_exp2 = h1 %>%
group_by(utterance) %>%
summarize(Mean = mean(responseCC), CILow = ci.low(responseCC), CIHigh = ci.high(responseCC)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
select(-c(CILow, CIHigh))
means_exp2
# relevel the utterances
means_exp2$utterance = factor(means_exp2$utterance, levels = means.utt$utterance[order(means.utt$Mean)], ordered = TRUE)
levels(means_exp2$utterance)
# plot projection (QUD BEL) for neg-know and neg-think (Exp 1)
ggplot(means_exp2, aes(x=utterance, y=Mean)) +
#geom_point(data=PL_agg.utt, shape=21, aes(x=utterance, y=prob), size = 3, color = "cornflowerblue", fill="cornflowerblue") +
#geom_point(data=means_exp2, aes(x=utterance, y=Mean), color="#E69F00", size = 3, position=position_nudge(x=.2)) +
#geom_errorbar(data=means_exp2, aes(ymin=YMin,ymax=YMax), width=.05,color="#E69F00",position=position_nudge(x=.2)) +
geom_point(shape=21, size = 3, color = "black", fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="top") +
guides(shape=guide_legend("prior probability of target content"),fill=guide_legend("QUD", override.aes=list(shape=21))) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,0.2,0.4,0.6,0.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("simple-pos"="c", "simple-neg"="not c", "know-pos" = "Cole knows \n that c", "know-neg" = "Cole doesn't \n know that c",
"think-pos" = "Cole thinks \n that c", "think-neg" = "Cole doesn't \n think that c")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
ggsave("../graphs/figures-for-SuB29-paper/H1.pdf",height=2.7,width=2.3)
# select relevant utterances and QUDs: negated know and think, QUD BEL?
h3 = d %>%
filter(predicate == "know" | predicate == "think") %>%
filter(valence == "neg")
# calculate mean inference in exp1 to order utterances
means.utt = d %>%
group_by(utterance) %>%
summarize(Mean = mean(response))
means.utt
# calculate mean inference ratings in exp2 by QUD
means_exp2 = h3 %>%
group_by(qud) %>%
summarize(Mean = mean(response), CILow = ci.low(response), CIHigh = ci.high(response)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
select(-c(CILow, CIHigh))
means_exp2
# calculate mean inference ratings in exp2 by QUD
means_exp2 = h3 %>%
group_by(qud) %>%
summarize(Mean = mean(responseCC), CILow = ci.low(responseCC), CIHigh = ci.high(responseCC)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
select(-c(CILow, CIHigh))
means_exp2
# relevel QUDs
means_exp2$qud <- factor(means_exp2$qud, levels = c("nai","ai"), labels = c("BEL?", "C?"))
# plot
ggplot(means_exp2, aes(x=qud, y=Mean)) +
#geom_point(data=PL_agg.utt.qud, shape=21, aes(x=qud, y=prob), size = 3, color = "red", fill = "red") +
geom_point(size = 3, color="black",fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="none") +
#scale_fill_manual(values=c("#E69F00","#56B4E9")) +
#guides(fill=guide_legend("QUD")) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,.2,.4,.6,.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("BEL?"="BEL?", "CC?"="C?")) +
#scale_x_discrete(labels=c("BEL?"="Does Cole \n believe C?", "C?"="Does Charley \n speak Spanish?")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
# plot
ggplot(means_exp2, aes(x=qud, y=Mean)) +
#geom_point(data=PL_agg.utt.qud, shape=21, aes(x=qud, y=prob), size = 3, color = "red", fill = "red") +
geom_point(size = 3, color="black",fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="none") +
#scale_fill_manual(values=c("#E69F00","#56B4E9")) +
#guides(fill=guide_legend("QUD")) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,.2,.4,.6,.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("BEL?"="BEL?", "CC?"="C?")) +
#scale_x_discrete(labels=c("BEL?"="Does Cole \n believe C?", "C?"="Does Charley \n speak Spanish?")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
ggsave("../graphs/figures-for-SuB29-paper/H3.pdf",height=2.7,width=2.3)
ggplot(means_exp2[utterance == "neg-know",], aes(x=qud, y=Mean)) +
#geom_point(data=PL_agg.utt.qud, shape=21, aes(x=qud, y=prob), size = 3, color = "red", fill = "red") +
geom_point(size = 3, color="black",fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="none") +
#scale_fill_manual(values=c("#E69F00","#56B4E9")) +
#guides(fill=guide_legend("QUD")) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,.2,.4,.6,.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("BEL?"="BEL?", "CC?"="C?")) +
#scale_x_discrete(labels=c("BEL?"="Does Cole \n believe C?", "C?"="Does Charley \n speak Spanish?")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
# select relevant utterances and QUDs: negated know and think, QUD BEL?
h3 = d %>%
filter(predicate == "know" | predicate == "think") %>%
filter(valence == "neg")
# calculate mean inference in exp1 to order utterances
means.utt = d %>%
group_by(utterance) %>%
summarize(Mean = mean(response))
means.utt
# calculate mean inference ratings in exp2 by QUD
means_exp2 = h3 %>%
group_by(qud,utterance) %>%
summarize(Mean = mean(responseCC), CILow = ci.low(responseCC), CIHigh = ci.high(responseCC)) %>%
mutate(YMin = Mean - CILow, YMax = Mean + CIHigh) %>%
select(-c(CILow, CIHigh))
means_exp2
# relevel QUDs
means_exp2$qud <- factor(means_exp2$qud, levels = c("nai","ai"), labels = c("BEL?", "C?"))
# plot
ggplot(means_exp2[utterance == "know-neg",], aes(x=qud, y=Mean)) +
#geom_point(data=PL_agg.utt.qud, shape=21, aes(x=qud, y=prob), size = 3, color = "red", fill = "red") +
geom_point(size = 3, color="black",fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="none") +
#scale_fill_manual(values=c("#E69F00","#56B4E9")) +
#guides(fill=guide_legend("QUD")) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,.2,.4,.6,.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("BEL?"="BEL?", "CC?"="C?")) +
#scale_x_discrete(labels=c("BEL?"="Does Cole \n believe C?", "C?"="Does Charley \n speak Spanish?")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
means_exp2
# plot
ggplot(means_exp2[means_exp2$utterance == "know-neg",], aes(x=qud, y=Mean)) +
#geom_point(data=PL_agg.utt.qud, shape=21, aes(x=qud, y=prob), size = 3, color = "red", fill = "red") +
geom_point(size = 3, color="black",fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="none") +
#scale_fill_manual(values=c("#E69F00","#56B4E9")) +
#guides(fill=guide_legend("QUD")) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,.2,.4,.6,.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("BEL?"="BEL?", "CC?"="C?")) +
#scale_x_discrete(labels=c("BEL?"="Does Cole \n believe C?", "C?"="Does Charley \n speak Spanish?")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
# plot
ggplot(means_exp2[means_exp2$utterance == "know-neg",], aes(x=qud, y=Mean)) +
#geom_point(data=PL_agg.utt.qud, shape=21, aes(x=qud, y=prob), size = 3, color = "red", fill = "red") +
geom_point(size = 3, color="black",fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="none") +
#scale_fill_manual(values=c("#E69F00","#56B4E9")) +
#guides(fill=guide_legend("QUD")) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,.2,.4,.6,.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("BEL?"="BEL?", "CC?"="C?")) +
#scale_x_discrete(labels=c("BEL?"="Does Cole \n believe C?", "C?"="Does Charley \n speak Spanish?")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
ggsave("../graphs/figures-for-SuB29-paper/H3-neg-know.pdf",height=2.7,width=2.3)
ggplot(means_exp2[means_exp2$utterance == "think-neg",], aes(x=qud, y=Mean)) +
#geom_point(data=PL_agg.utt.qud, shape=21, aes(x=qud, y=prob), size = 3, color = "red", fill = "red") +
geom_point(size = 3, color="black",fill="black") +
geom_errorbar(aes(ymin=YMin,ymax=YMax),width=.05,color="black") +
theme(legend.position="none") +
#scale_fill_manual(values=c("#E69F00","#56B4E9")) +
#guides(fill=guide_legend("QUD")) +
theme(axis.text.y = element_text(size=10)) +
scale_y_continuous(limits = c(0,1),breaks = c(0,.2,.4,.6,.8,1.0), labels = c("0",".2",".4",".6",".8","1")) +
scale_x_discrete(labels=c("BEL?"="BEL?", "CC?"="C?")) +
#scale_x_discrete(labels=c("BEL?"="Does Cole \n believe C?", "C?"="Does Charley \n speak Spanish?")) +
ylab("Mean inference rating") +
xlab("Utterance") +
theme(axis.title.x=element_blank())
ggsave("../graphs/figures-for-SuB29-paper/H3-neg-think.pdf",height=2.7,width=2.3)
# set working directory to directory of script
this.dir <- dirname(rstudioapi::getSourceEditorContext()$path)
setwd(this.dir)
# load cleaned data
d = read_csv("../data/cd.csv")
nrow(d) #327
# analyses reported in SuB abstract ----
names(d)
table(d$utterance)
table(d$qud)
# set reference levels
d = d %>%
mutate(utterance = fct_relevel(utterance, "think-neg"),
qud = fct_relevel(qud, "ai"))
# P1: neg-know projects more than neg-think
m = lmer(responseCC ~ utterance + (1|qud) + (1|content), data=d[d$valence == "neg",])
summary(m)
# P3 just for know
m = lmer(responseCC ~ qud + (1|content), data=d[d$predicate == "know" & d$valence == "neg",])
summary(m)
# P3 just for think
m = lmer(responseCC ~ qud + (1|content), data=d[d$predicate == "think" & d$valence == "neg",])
summary(m)
